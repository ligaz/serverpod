name: Serverpod CI

on:
  push:
    branches: ['**']
  pull_request:
    branches:
      - main
      - dev

jobs:
  bootstrap_tests:
    name: Bootstrap tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        flutter-version: ['3.10.0', '3.13.0']
        os: [ubuntu-latest, flyci-macos-large-latest-m1]
        path: ["tests/bootstrap_project"]
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}
      - name: Setup docker (missing on MacOS)
        if: runner.os == 'macos'
        run: |
          brew install docker docker-compose

          # Link the Docker Compose v2 plugin so it's understood by the docker CLI
          mkdir -p ~/.docker/cli-plugins
          ln -sfn /usr/local/opt/docker-compose/bin/docker-compose ~/.docker/cli-plugins/docker-compose

          colima start
      - name: Run unit tests
        run: dart test --concurrency=1
        working-directory: ${{ matrix.path }}

  cli_e2e_tests:
    name: CLI e2e tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        flutter-version: ['3.10.0', '3.13.0']
        os: [ubuntu-latest, flyci-macos-large-latest-m1]
        path: ["tests/serverpod_cli_e2e_test"]
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}
      - name: Setup docker (missing on MacOS)
        if: runner.os == 'macos'
        run: |
          brew install docker docker-compose

          # Link the Docker Compose v2 plugin so it's understood by the docker CLI
          mkdir -p ~/.docker/cli-plugins
          ln -sfn /usr/local/opt/docker-compose/bin/docker-compose ~/.docker/cli-plugins/docker-compose

          colima start
      - name: Run unit tests
        run: dart test --concurrency=1
        working-directory: ${{ matrix.path }}
